"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var color_1 = require("tns-core-modules/color");
var content_view_1 = require("tns-core-modules/ui/content-view");
var view_1 = require("tns-core-modules/ui/core/view");
var view_2 = require("tns-core-modules/ui/core/view");
exports.backgroundColorProperty = view_2.backgroundColorProperty;
exports.backgroundInternalProperty = view_2.backgroundInternalProperty;
/**
 * Contains the CardView class, which represents a card view component.
 */
var CardViewCommon = (function (_super) {
    __extends(CardViewCommon, _super);
    function CardViewCommon() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return CardViewCommon;
}(content_view_1.ContentView));
exports.CardViewCommon = CardViewCommon;
exports.radiusProperty = new view_1.Property({
    name: "radius",
    valueConverter: function (value) { return +value; }
});
exports.radiusProperty.register(CardViewCommon);
exports.elevationProperty = new view_1.Property({
    name: "elevation",
    valueConverter: function (value) { return +value; }
});
exports.elevationProperty.register(CardViewCommon);
exports.shadowRadiusProperty = new view_1.Property({
    name: "shadowRadius",
    valueConverter: function (value) { return +value; }
});
exports.shadowRadiusProperty.register(CardViewCommon);
exports.shadowOffsetWidthProperty = new view_1.Property({
    name: "shadowOffsetWidth",
    valueConverter: function (value) { return +value; }
});
exports.shadowOffsetWidthProperty.register(CardViewCommon);
exports.shadowOffsetHeightProperty = new view_1.Property({
    name: "shadowOffsetHeight",
    valueConverter: function (value) { return +value; }
});
exports.shadowOffsetHeightProperty.register(CardViewCommon);
exports.shadowColorProperty = new view_1.Property({
    name: "shadowColor",
    valueConverter: function (value) { return new color_1.Color(value); }
});
exports.shadowColorProperty.register(CardViewCommon);
exports.shadowOpacityProperty = new view_1.Property({
    name: "shadowOpacity",
    valueConverter: function (value) { return +value; }
});
exports.shadowOpacityProperty.register(CardViewCommon);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2FyZHZpZXctY29tbW9uLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiY2FyZHZpZXctY29tbW9uLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsZ0RBQStDO0FBQy9DLGlFQUErRDtBQUMvRCxzREFJdUM7QUFFdkMsc0RBR3VDO0FBRnJDLHlDQUFBLHVCQUF1QixDQUFBO0FBQ3ZCLDRDQUFBLDBCQUEwQixDQUFBO0FBRzVCOztHQUVHO0FBQ0g7SUFBb0Msa0NBQVc7SUFBL0M7O0lBNkNBLENBQUM7SUFBRCxxQkFBQztBQUFELENBQUMsQUE3Q0QsQ0FBb0MsMEJBQVcsR0E2QzlDO0FBN0NZLHdDQUFjO0FBK0NkLFFBQUEsY0FBYyxHQUFHLElBQUksZUFBUSxDQUF5QjtJQUNqRSxJQUFJLEVBQUUsUUFBUTtJQUNkLGNBQWMsRUFBRSxVQUFBLEtBQUssSUFBSSxPQUFBLENBQUMsS0FBSyxFQUFOLENBQU07Q0FDaEMsQ0FBQyxDQUFDO0FBQ0gsc0JBQWMsQ0FBQyxRQUFRLENBQUMsY0FBYyxDQUFDLENBQUM7QUFFM0IsUUFBQSxpQkFBaUIsR0FBRyxJQUFJLGVBQVEsQ0FBeUI7SUFDcEUsSUFBSSxFQUFFLFdBQVc7SUFDakIsY0FBYyxFQUFFLFVBQUEsS0FBSyxJQUFJLE9BQUEsQ0FBQyxLQUFLLEVBQU4sQ0FBTTtDQUNoQyxDQUFDLENBQUM7QUFDSCx5QkFBaUIsQ0FBQyxRQUFRLENBQUMsY0FBYyxDQUFDLENBQUM7QUFFOUIsUUFBQSxvQkFBb0IsR0FBRyxJQUFJLGVBQVEsQ0FBeUI7SUFDdkUsSUFBSSxFQUFFLGNBQWM7SUFDcEIsY0FBYyxFQUFFLFVBQUEsS0FBSyxJQUFJLE9BQUEsQ0FBQyxLQUFLLEVBQU4sQ0FBTTtDQUNoQyxDQUFDLENBQUM7QUFDSCw0QkFBb0IsQ0FBQyxRQUFRLENBQUMsY0FBYyxDQUFDLENBQUM7QUFFakMsUUFBQSx5QkFBeUIsR0FBRyxJQUFJLGVBQVEsQ0FBeUI7SUFDNUUsSUFBSSxFQUFFLG1CQUFtQjtJQUN6QixjQUFjLEVBQUUsVUFBQSxLQUFLLElBQUksT0FBQSxDQUFDLEtBQUssRUFBTixDQUFNO0NBQ2hDLENBQUMsQ0FBQztBQUNILGlDQUF5QixDQUFDLFFBQVEsQ0FBQyxjQUFjLENBQUMsQ0FBQztBQUV0QyxRQUFBLDBCQUEwQixHQUFHLElBQUksZUFBUSxDQUF5QjtJQUM3RSxJQUFJLEVBQUUsb0JBQW9CO0lBQzFCLGNBQWMsRUFBRSxVQUFBLEtBQUssSUFBSSxPQUFBLENBQUMsS0FBSyxFQUFOLENBQU07Q0FDaEMsQ0FBQyxDQUFDO0FBQ0gsa0NBQTBCLENBQUMsUUFBUSxDQUFDLGNBQWMsQ0FBQyxDQUFDO0FBRXZDLFFBQUEsbUJBQW1CLEdBQUcsSUFBSSxlQUFRLENBQXdCO0lBQ3JFLElBQUksRUFBRSxhQUFhO0lBQ25CLGNBQWMsRUFBRSxVQUFBLEtBQUssSUFBSSxPQUFBLElBQUksYUFBSyxDQUFDLEtBQUssQ0FBQyxFQUFoQixDQUFnQjtDQUMxQyxDQUFDLENBQUM7QUFDSCwyQkFBbUIsQ0FBQyxRQUFRLENBQUMsY0FBYyxDQUFDLENBQUM7QUFFaEMsUUFBQSxxQkFBcUIsR0FBRyxJQUFJLGVBQVEsQ0FBeUI7SUFDeEUsSUFBSSxFQUFFLGVBQWU7SUFDckIsY0FBYyxFQUFFLFVBQUEsS0FBSyxJQUFJLE9BQUEsQ0FBQyxLQUFLLEVBQU4sQ0FBTTtDQUNoQyxDQUFDLENBQUM7QUFDSCw2QkFBcUIsQ0FBQyxRQUFRLENBQUMsY0FBYyxDQUFDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb2xvciB9IGZyb20gXCJ0bnMtY29yZS1tb2R1bGVzL2NvbG9yXCI7XG5pbXBvcnQgeyBDb250ZW50VmlldyB9IGZyb20gXCJ0bnMtY29yZS1tb2R1bGVzL3VpL2NvbnRlbnQtdmlld1wiO1xuaW1wb3J0IHtcbiAgYmFja2dyb3VuZENvbG9yUHJvcGVydHksXG4gIGJhY2tncm91bmRJbnRlcm5hbFByb3BlcnR5LFxuICBQcm9wZXJ0eVxufSBmcm9tIFwidG5zLWNvcmUtbW9kdWxlcy91aS9jb3JlL3ZpZXdcIjtcblxuZXhwb3J0IHtcbiAgYmFja2dyb3VuZENvbG9yUHJvcGVydHksXG4gIGJhY2tncm91bmRJbnRlcm5hbFByb3BlcnR5XG59IGZyb20gXCJ0bnMtY29yZS1tb2R1bGVzL3VpL2NvcmUvdmlld1wiO1xuXG4vKipcbiAqIENvbnRhaW5zIHRoZSBDYXJkVmlldyBjbGFzcywgd2hpY2ggcmVwcmVzZW50cyBhIGNhcmQgdmlldyBjb21wb25lbnQuXG4gKi9cbmV4cG9ydCBjbGFzcyBDYXJkVmlld0NvbW1vbiBleHRlbmRzIENvbnRlbnRWaWV3IHtcbiAgLyoqXG4gICAqIEdldHMgdGhlIG5hdGl2ZSBbYW5kcm9pZCB3aWRnZXRdKGh0dHBzOi8vZGV2ZWxvcGVyLmFuZHJvaWQuY29tL3JlZmVyZW5jZS9hbmRyb2lkL3N1cHBvcnQvdjcvd2lkZ2V0L0NhcmRWaWV3Lmh0bWwpIHRoYXQgcmVwcmVzZW50cyB0aGUgdXNlciBpbnRlcmZhY2UgZm9yIHRoaXMgY29tcG9uZW50LiBWYWxpZCBvbmx5IHdoZW4gcnVubmluZyBvbiBBbmRyb2lkIE9TLlxuICAgKi9cbiAgYW5kcm9pZDogYW55IC8qIGFuZHJvaWQuc3VwcG9ydC52Ny53aWRnZXQuQ2FyZFZpZXcgKi87XG5cbiAgLyoqXG4gICAqIEdldHMgdGhlIG5hdGl2ZSBbaW9zIHdpZGdldF0oVUlWaWV3KSB0aGF0IHJlcHJlc2VudHMgdGhlIHVzZXIgaW50ZXJmYWNlIGZvciB0aGlzIGNvbXBvbmVudC4gVmFsaWQgb25seSB3aGVuIHJ1bm5pbmcgb24gaU9TLlxuICAgKi9cbiAgaW9zOiBhbnkgLyogVUlWaWV3ICovO1xuXG4gIC8qKlxuICAgKiBHZXRzIG9yIHNldCB0aGUgcmFkaXVzIG9mIHRoZSBjYXJkIHZpZXcuXG4gICAqL1xuICByYWRpdXM6IG51bWJlcjtcblxuICAvKipcbiAgICogR2V0cyBvciBzZXQgdGhlIGVsZXZhdGlvbiBvZiB0aGUgY2FyZCB2aWV3LiAgKiogVmFsaWQgb25seSB3aGVuIHJ1bm5pbmcgb24gQW5kcm9pZCBPUyAqKlxuICAgKi9cbiAgZWxldmF0aW9uOiBudW1iZXI7XG5cbiAgLyoqXG4gICAqIEdldHMgb3Igc2V0IHRoZSBzaGFkb3cgcmFkaXVzIG9mIHRoZSBjYXJkIHZpZXcuICAqKiBWYWxpZCBvbmx5IHdoZW4gcnVubmluZyBvbiBpT1MgKipcbiAgICovXG4gIHNoYWRvd1JhZGl1czogbnVtYmVyO1xuXG4gIC8qKlxuICAgKiBTZXQgdGhlIHNoYWRvdyBvZmZzZXQgd2lkdGggb2YgdGhlIGNhcmQgdmlldy4gKiogVmFsaWQgb25seSB3aGVuIHJ1bm5pbmcgb24gaU9TICoqXG4gICAqL1xuICBzaGFkb3dPZmZzZXRXaWR0aDogbnVtYmVyO1xuXG4gIC8qKlxuICAgKiBTZXQgdGhlIHNoYWRvdyBvZmZzZXQgaGVpZ2h0IG9mIHRoZSBjYXJkIHZpZXcuICoqIFZhbGlkIG9ubHkgd2hlbiBydW5uaW5nIG9uIGlPUyAqKlxuICAgKi9cbiAgc2hhZG93T2Zmc2V0SGVpZ2h0OiBudW1iZXI7XG5cbiAgLyoqXG4gICAqIFNldCB0aGUgc2hhZG93IGNvbG9yIG9mIHRoZSBjYXJkIHZpZXcuICoqIFZhbGlkIG9ubHkgd2hlbiBydW5uaW5nIG9uIGlPUyAqKlxuICAgKi9cbiAgc2hhZG93Q29sb3I6IHN0cmluZztcblxuICAvKipcbiAgICogU2V0IHRoZSBzaGFkb3cgb3BhY2l0eSBvZiB0aGUgY2FyZCB2aWV3LiAqKiBWYWxpZCBvbmx5IHdoZW4gcnVubmluZyBvbiBpT1MgKipcbiAgICovXG4gIHNoYWRvd09wYWNpdHk6IG51bWJlcjtcbn1cblxuZXhwb3J0IGNvbnN0IHJhZGl1c1Byb3BlcnR5ID0gbmV3IFByb3BlcnR5PENhcmRWaWV3Q29tbW9uLCBudW1iZXI+KHtcbiAgbmFtZTogXCJyYWRpdXNcIixcbiAgdmFsdWVDb252ZXJ0ZXI6IHZhbHVlID0+ICt2YWx1ZVxufSk7XG5yYWRpdXNQcm9wZXJ0eS5yZWdpc3RlcihDYXJkVmlld0NvbW1vbik7XG5cbmV4cG9ydCBjb25zdCBlbGV2YXRpb25Qcm9wZXJ0eSA9IG5ldyBQcm9wZXJ0eTxDYXJkVmlld0NvbW1vbiwgbnVtYmVyPih7XG4gIG5hbWU6IFwiZWxldmF0aW9uXCIsXG4gIHZhbHVlQ29udmVydGVyOiB2YWx1ZSA9PiArdmFsdWVcbn0pO1xuZWxldmF0aW9uUHJvcGVydHkucmVnaXN0ZXIoQ2FyZFZpZXdDb21tb24pO1xuXG5leHBvcnQgY29uc3Qgc2hhZG93UmFkaXVzUHJvcGVydHkgPSBuZXcgUHJvcGVydHk8Q2FyZFZpZXdDb21tb24sIG51bWJlcj4oe1xuICBuYW1lOiBcInNoYWRvd1JhZGl1c1wiLFxuICB2YWx1ZUNvbnZlcnRlcjogdmFsdWUgPT4gK3ZhbHVlXG59KTtcbnNoYWRvd1JhZGl1c1Byb3BlcnR5LnJlZ2lzdGVyKENhcmRWaWV3Q29tbW9uKTtcblxuZXhwb3J0IGNvbnN0IHNoYWRvd09mZnNldFdpZHRoUHJvcGVydHkgPSBuZXcgUHJvcGVydHk8Q2FyZFZpZXdDb21tb24sIG51bWJlcj4oe1xuICBuYW1lOiBcInNoYWRvd09mZnNldFdpZHRoXCIsXG4gIHZhbHVlQ29udmVydGVyOiB2YWx1ZSA9PiArdmFsdWVcbn0pO1xuc2hhZG93T2Zmc2V0V2lkdGhQcm9wZXJ0eS5yZWdpc3RlcihDYXJkVmlld0NvbW1vbik7XG5cbmV4cG9ydCBjb25zdCBzaGFkb3dPZmZzZXRIZWlnaHRQcm9wZXJ0eSA9IG5ldyBQcm9wZXJ0eTxDYXJkVmlld0NvbW1vbiwgbnVtYmVyPih7XG4gIG5hbWU6IFwic2hhZG93T2Zmc2V0SGVpZ2h0XCIsXG4gIHZhbHVlQ29udmVydGVyOiB2YWx1ZSA9PiArdmFsdWVcbn0pO1xuc2hhZG93T2Zmc2V0SGVpZ2h0UHJvcGVydHkucmVnaXN0ZXIoQ2FyZFZpZXdDb21tb24pO1xuXG5leHBvcnQgY29uc3Qgc2hhZG93Q29sb3JQcm9wZXJ0eSA9IG5ldyBQcm9wZXJ0eTxDYXJkVmlld0NvbW1vbiwgQ29sb3I+KHtcbiAgbmFtZTogXCJzaGFkb3dDb2xvclwiLFxuICB2YWx1ZUNvbnZlcnRlcjogdmFsdWUgPT4gbmV3IENvbG9yKHZhbHVlKVxufSk7XG5zaGFkb3dDb2xvclByb3BlcnR5LnJlZ2lzdGVyKENhcmRWaWV3Q29tbW9uKTtcblxuZXhwb3J0IGNvbnN0IHNoYWRvd09wYWNpdHlQcm9wZXJ0eSA9IG5ldyBQcm9wZXJ0eTxDYXJkVmlld0NvbW1vbiwgbnVtYmVyPih7XG4gIG5hbWU6IFwic2hhZG93T3BhY2l0eVwiLFxuICB2YWx1ZUNvbnZlcnRlcjogdmFsdWUgPT4gK3ZhbHVlXG59KTtcbnNoYWRvd09wYWNpdHlQcm9wZXJ0eS5yZWdpc3RlcihDYXJkVmlld0NvbW1vbik7XG4iXX0=