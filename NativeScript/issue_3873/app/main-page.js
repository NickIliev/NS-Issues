"use strict";
var observable_array_1 = require("data/observable-array");
var main_view_model_1 = require("./main-view-model");
var vm = new main_view_model_1.ViewModel();
var lv;
function selectItemTemplate(item, index, items) {
    return item.id % 10 === 0 ? "red" : item.id % 2 === 0 ? "green" : "yellow";
}
exports.selectItemTemplate = selectItemTemplate;
function pageLoaded(args) {
    var page = args.object;
    lv = page.getViewById("lv2");
    page.bindingContext = vm;
}
exports.pageLoaded = pageLoaded;
function onItemTap(args) {
    console.log("onItemTap");
    vm.set("items", new observable_array_1.ObservableArray([new main_view_model_1.Item("new item", 111), new main_view_model_1.Item("new item", 222), new main_view_model_1.Item("new item", 333), new main_view_model_1.Item("new item", 444), new main_view_model_1.Item("new item", 555), new main_view_model_1.Item("new item", 666), new main_view_model_1.Item("new item", 777), new main_view_model_1.Item("new item", 888)]));
}
exports.onItemTap = onItemTap;
var scrollToBottom = true;
function onScroll(args) {
    var page = args.object.page;
    var gridLayout = page.getViewById("grid-layout");
    for (var i = 0, length_1 = gridLayout.getChildrenCount(); i < length_1; i++) {
        var listView = gridLayout.getChildAt(i);
        listView.scrollToIndex(scrollToBottom ? listView.items.length - 1 : 0);
    }
    scrollToBottom = !scrollToBottom;
}
exports.onScroll = onScroll;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFpbi1wYWdlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsibWFpbi1wYWdlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFDQSwwREFBd0Q7QUFHeEQscURBQW9EO0FBTXBELElBQUksRUFBRSxHQUFHLElBQUksMkJBQVMsRUFBRSxDQUFDO0FBQ3pCLElBQUksRUFBWSxDQUFDO0FBRWpCLDRCQUFtQyxJQUFVLEVBQUUsS0FBYSxFQUFFLEtBQTRCO0lBQ3RGLE1BQU0sQ0FBQyxJQUFJLENBQUMsRUFBRSxHQUFHLEVBQUUsS0FBSyxDQUFDLEdBQUcsS0FBSyxHQUFHLElBQUksQ0FBQyxFQUFFLEdBQUcsQ0FBQyxLQUFLLENBQUMsR0FBRyxPQUFPLEdBQUcsUUFBUSxDQUFDO0FBQy9FLENBQUM7QUFGRCxnREFFQztBQUVELG9CQUEyQixJQUFlO0lBQ3hDLElBQUksSUFBSSxHQUFTLElBQUksQ0FBQyxNQUFNLENBQUM7SUFDN0IsRUFBRSxHQUFhLElBQUksQ0FBQyxXQUFXLENBQUMsS0FBSyxDQUFDLENBQUM7SUFFdkMsSUFBSSxDQUFDLGNBQWMsR0FBRyxFQUFFLENBQUM7QUFDM0IsQ0FBQztBQUxELGdDQUtDO0FBR0QsbUJBQTBCLElBQWU7SUFDckMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxXQUFXLENBQUMsQ0FBQztJQUN6QixFQUFFLENBQUMsR0FBRyxDQUFDLE9BQU8sRUFBRSxJQUFJLGtDQUFlLENBQUMsQ0FBQyxJQUFJLHNCQUFJLENBQUMsVUFBVSxFQUFFLEdBQUcsQ0FBQyxFQUFFLElBQUksc0JBQUksQ0FBQyxVQUFVLEVBQUUsR0FBRyxDQUFDLEVBQUUsSUFBSSxzQkFBSSxDQUFDLFVBQVUsRUFBRSxHQUFHLENBQUMsRUFBRSxJQUFJLHNCQUFJLENBQUMsVUFBVSxFQUFFLEdBQUcsQ0FBQyxFQUFFLElBQUksc0JBQUksQ0FBQyxVQUFVLEVBQUUsR0FBRyxDQUFDLEVBQUUsSUFBSSxzQkFBSSxDQUFDLFVBQVUsRUFBRSxHQUFHLENBQUMsRUFBRSxJQUFJLHNCQUFJLENBQUMsVUFBVSxFQUFFLEdBQUcsQ0FBQyxFQUFFLElBQUksc0JBQUksQ0FBQyxVQUFVLEVBQUUsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUE7QUFDbFEsQ0FBQztBQUhELDhCQUdDO0FBRUQsSUFBSSxjQUFjLEdBQUcsSUFBSSxDQUFDO0FBQzFCLGtCQUF5QixJQUFlO0lBQ3RDLElBQUksSUFBSSxHQUFVLElBQUksQ0FBQyxNQUFPLENBQUMsSUFBSSxDQUFDO0lBQ3BDLElBQUksVUFBVSxHQUFHLElBQUksQ0FBQyxXQUFXLENBQWEsYUFBYSxDQUFDLENBQUM7SUFDN0QsR0FBRyxDQUFDLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxFQUFFLFFBQU0sR0FBRyxVQUFVLENBQUMsZ0JBQWdCLEVBQUUsRUFBRSxDQUFDLEdBQUcsUUFBTSxFQUFFLENBQUMsRUFBRSxFQUFDLENBQUM7UUFDckUsSUFBSSxRQUFRLEdBQWEsVUFBVSxDQUFDLFVBQVUsQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUNsRCxRQUFRLENBQUMsYUFBYSxDQUFDLGNBQWMsR0FBRyxRQUFRLENBQUMsS0FBSyxDQUFDLE1BQU0sR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUM7SUFDM0UsQ0FBQztJQUNELGNBQWMsR0FBRyxDQUFDLGNBQWMsQ0FBQztBQUNuQyxDQUFDO0FBUkQsNEJBUUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBFdmVudERhdGEgfSBmcm9tIFwiZGF0YS9vYnNlcnZhYmxlXCI7XG5pbXBvcnQgeyBPYnNlcnZhYmxlQXJyYXkgfSBmcm9tIFwiZGF0YS9vYnNlcnZhYmxlLWFycmF5XCI7XG5pbXBvcnQgeyBWaWV3LCBLZXllZFRlbXBsYXRlIH0gZnJvbSBcInVpL2NvcmUvdmlld1wiO1xuaW1wb3J0IHsgUGFnZSB9IGZyb20gXCJ1aS9wYWdlXCI7XG5pbXBvcnQgeyBWaWV3TW9kZWwsIEl0ZW0gfSBmcm9tICcuL21haW4tdmlldy1tb2RlbCc7XG5pbXBvcnQgeyBMaXN0VmlldyB9IGZyb20gXCJ1aS9saXN0LXZpZXdcIjtcbmltcG9ydCB7IExhYmVsIH0gZnJvbSBcInVpL2xhYmVsXCI7XG5pbXBvcnQgeyBHcmlkTGF5b3V0IH0gZnJvbSBcInVpL2xheW91dHMvZ3JpZC1sYXlvdXRcIjtcbmltcG9ydCB7IENvbG9yIH0gZnJvbSBcImNvbG9yXCI7XG5cbmxldCB2bSA9IG5ldyBWaWV3TW9kZWwoKTtcbnZhciBsdjogTGlzdFZpZXc7XG5cbmV4cG9ydCBmdW5jdGlvbiBzZWxlY3RJdGVtVGVtcGxhdGUoaXRlbTogSXRlbSwgaW5kZXg6IG51bWJlciwgaXRlbXM6IE9ic2VydmFibGVBcnJheTxJdGVtPik6IHN0cmluZyB7XG4gICAgcmV0dXJuIGl0ZW0uaWQgJSAxMCA9PT0gMCA/IFwicmVkXCIgOiBpdGVtLmlkICUgMiA9PT0gMCA/IFwiZ3JlZW5cIiA6IFwieWVsbG93XCI7IFxufVxuXG5leHBvcnQgZnVuY3Rpb24gcGFnZUxvYWRlZChhcmdzOiBFdmVudERhdGEpIHtcbiAgbGV0IHBhZ2UgPSA8UGFnZT5hcmdzLm9iamVjdDtcbiAgbHYgPSA8TGlzdFZpZXc+cGFnZS5nZXRWaWV3QnlJZChcImx2MlwiKTtcblxuICBwYWdlLmJpbmRpbmdDb250ZXh0ID0gdm07XG59XG5cblxuZXhwb3J0IGZ1bmN0aW9uIG9uSXRlbVRhcChhcmdzOiBFdmVudERhdGEpIHtcbiAgICBjb25zb2xlLmxvZyhcIm9uSXRlbVRhcFwiKTtcbiAgICB2bS5zZXQoXCJpdGVtc1wiLCBuZXcgT2JzZXJ2YWJsZUFycmF5KFtuZXcgSXRlbShcIm5ldyBpdGVtXCIsIDExMSksIG5ldyBJdGVtKFwibmV3IGl0ZW1cIiwgMjIyKSwgbmV3IEl0ZW0oXCJuZXcgaXRlbVwiLCAzMzMpLCBuZXcgSXRlbShcIm5ldyBpdGVtXCIsIDQ0NCksIG5ldyBJdGVtKFwibmV3IGl0ZW1cIiwgNTU1KSwgbmV3IEl0ZW0oXCJuZXcgaXRlbVwiLCA2NjYpLCBuZXcgSXRlbShcIm5ldyBpdGVtXCIsIDc3NyksIG5ldyBJdGVtKFwibmV3IGl0ZW1cIiwgODg4KV0pKVxufVxuXG5sZXQgc2Nyb2xsVG9Cb3R0b20gPSB0cnVlO1xuZXhwb3J0IGZ1bmN0aW9uIG9uU2Nyb2xsKGFyZ3M6IEV2ZW50RGF0YSl7XG4gIGxldCBwYWdlID0gKDxWaWV3PmFyZ3Mub2JqZWN0KS5wYWdlO1xuICBsZXQgZ3JpZExheW91dCA9IHBhZ2UuZ2V0Vmlld0J5SWQ8R3JpZExheW91dD4oXCJncmlkLWxheW91dFwiKTtcbiAgZm9yIChsZXQgaSA9IDAsIGxlbmd0aCA9IGdyaWRMYXlvdXQuZ2V0Q2hpbGRyZW5Db3VudCgpOyBpIDwgbGVuZ3RoOyBpKyspe1xuICAgICAgbGV0IGxpc3RWaWV3ID0gPExpc3RWaWV3PmdyaWRMYXlvdXQuZ2V0Q2hpbGRBdChpKTtcbiAgICAgIGxpc3RWaWV3LnNjcm9sbFRvSW5kZXgoc2Nyb2xsVG9Cb3R0b20gPyBsaXN0Vmlldy5pdGVtcy5sZW5ndGggLSAxIDogMCk7XG4gIH1cbiAgc2Nyb2xsVG9Cb3R0b20gPSAhc2Nyb2xsVG9Cb3R0b207XG59Il19