"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var main_view_model_1 = require("./main-view-model");
var image_source_1 = require("image-source");
var nativescript_camera_1 = require("nativescript-camera");
var platform_1 = require("platform");
function navigatingTo(args) {
    var page = args.object;
    page.bindingContext = new main_view_model_1.HelloWorldModel();
    nativescript_camera_1.requestPermissions();
}
exports.navigatingTo = navigatingTo;
function takePhoto() {
    nativescript_camera_1.takePicture({
        width: 1280, height: 720, keepAspectRatio: false, saveToGallery: false
    }).then(function (imageAsset) {
        imageAsset.getImageAsync(function (res) {
            console.log(res);
            var image = image_source_1.fromNativeSource(res);
            if (platform_1.isIOS) {
                var imageData = UIImageJPEGRepresentation(image.ios, 1.0);
                var base64Img = imageData.base64EncodedStringWithOptions(NSDataBase64EncodingOptions.NSDataBase64EncodingEndLineWithLineFeed);
                console.log(base64Img); // our image repesented in  base64 string result
            }
            else if (platform_1.isAndroid) {
                var bitmap = res;
                var byteArrayOutputStream = new java.io.ByteArrayOutputStream();
                bitmap.compress(android.graphics.Bitmap.CompressFormat.PNG, 100, byteArrayOutputStream);
                var byteArray = byteArrayOutputStream.toByteArray();
                var base64String = android.util.Base64.encodeToString(byteArray, android.util.Base64.DEFAULT);
                console.log(base64String); // our image repesented in  base64 string result
            }
        });
    }).catch(function (err) {
        console.log("Error -> " + err.message);
    });
}
exports.takePhoto = takePhoto;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFpbi1wYWdlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsibWFpbi1wYWdlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBRUEscURBQW9EO0FBRXBELDZDQUFnRDtBQUNoRCwyREFBc0U7QUFDdEUscUNBQTJDO0FBUTNDLHNCQUE2QixJQUFlO0lBQ3hDLElBQUksSUFBSSxHQUFTLElBQUksQ0FBQyxNQUFNLENBQUM7SUFDN0IsSUFBSSxDQUFDLGNBQWMsR0FBRyxJQUFJLGlDQUFlLEVBQUUsQ0FBQztJQUU1Qyx3Q0FBa0IsRUFBRSxDQUFDO0FBQ3pCLENBQUM7QUFMRCxvQ0FLQztBQUVEO0lBQ0ksaUNBQVcsQ0FBQztRQUNSLEtBQUssRUFBRSxJQUFJLEVBQUUsTUFBTSxFQUFFLEdBQUcsRUFBRSxlQUFlLEVBQUUsS0FBSyxFQUFFLGFBQWEsRUFBRSxLQUFLO0tBQ3pFLENBQUMsQ0FBQyxJQUFJLENBQUMsVUFBQyxVQUFVO1FBQ2YsVUFBVSxDQUFDLGFBQWEsQ0FBQyxVQUFDLEdBQUc7WUFDekIsT0FBTyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQztZQUVqQixJQUFJLEtBQUssR0FBRywrQkFBZ0IsQ0FBQyxHQUFHLENBQUMsQ0FBQztZQUNsQyxFQUFFLENBQUMsQ0FBQyxnQkFBSyxDQUFDLENBQUMsQ0FBQztnQkFDUixJQUFJLFNBQVMsR0FBRyx5QkFBeUIsQ0FBQyxLQUFLLENBQUMsR0FBRyxFQUFFLEdBQUcsQ0FBQyxDQUFDO2dCQUMxRCxJQUFJLFNBQVMsR0FBRyxTQUFTLENBQUMsOEJBQThCLENBQUMsMkJBQTJCLENBQUMsdUNBQXVDLENBQUMsQ0FBQztnQkFDOUgsT0FBTyxDQUFDLEdBQUcsQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDLGdEQUFnRDtZQUM1RSxDQUFDO1lBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxDQUFDLG9CQUFTLENBQUMsQ0FBQyxDQUFDO2dCQUNuQixJQUFJLE1BQU0sR0FBRyxHQUFHLENBQUM7Z0JBQ2pCLElBQUkscUJBQXFCLEdBQUcsSUFBSSxJQUFJLENBQUMsRUFBRSxDQUFDLHFCQUFxQixFQUFFLENBQUM7Z0JBQ2hFLE1BQU0sQ0FBQyxRQUFRLENBQUMsT0FBTyxDQUFDLFFBQVEsQ0FBQyxNQUFNLENBQUMsY0FBYyxDQUFDLEdBQUcsRUFBRSxHQUFHLEVBQUUscUJBQXFCLENBQUMsQ0FBQztnQkFDeEYsSUFBSSxTQUFTLEdBQUcscUJBQXFCLENBQUMsV0FBVyxFQUFFLENBQUM7Z0JBQ3BELElBQUksWUFBWSxHQUFHLE9BQU8sQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLGNBQWMsQ0FBQyxTQUFTLEVBQUUsT0FBTyxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsT0FBTyxDQUFDLENBQUM7Z0JBRTlGLE9BQU8sQ0FBQyxHQUFHLENBQUMsWUFBWSxDQUFDLENBQUMsQ0FBQyxnREFBZ0Q7WUFDL0UsQ0FBQztRQUNMLENBQUMsQ0FBQyxDQUFDO0lBQ1AsQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDLFVBQVUsR0FBRztRQUNsQixPQUFPLENBQUMsR0FBRyxDQUFDLFdBQVcsR0FBRyxHQUFHLENBQUMsT0FBTyxDQUFDLENBQUM7SUFDM0MsQ0FBQyxDQUFDLENBQUM7QUFDUCxDQUFDO0FBekJELDhCQXlCQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEV2ZW50RGF0YSB9IGZyb20gJ2RhdGEvb2JzZXJ2YWJsZSc7XG5pbXBvcnQgeyBQYWdlIH0gZnJvbSAndWkvcGFnZSc7XG5pbXBvcnQgeyBIZWxsb1dvcmxkTW9kZWwgfSBmcm9tICcuL21haW4tdmlldy1tb2RlbCc7XG5cbmltcG9ydCB7IGZyb21OYXRpdmVTb3VyY2UgfSBmcm9tIFwiaW1hZ2Utc291cmNlXCI7XG5pbXBvcnQgeyB0YWtlUGljdHVyZSwgcmVxdWVzdFBlcm1pc3Npb25zIH0gZnJvbSBcIm5hdGl2ZXNjcmlwdC1jYW1lcmFcIjtcbmltcG9ydCB7IGlzSU9TLCBpc0FuZHJvaWR9IGZyb20gXCJwbGF0Zm9ybVwiO1xuXG5kZWNsYXJlIGxldCBhbmRyb2lkOiBhbnk7XG5kZWNsYXJlIGxldCBqYXZhOiBhbnk7XG5kZWNsYXJlIGxldCBVSUltYWdlSlBFR1JlcHJlc2VudGF0aW9uOiBhbnk7XG5kZWNsYXJlIGxldCBOU0RhdGFCYXNlNjRFbmNvZGluZ09wdGlvbnM6IGFueTtcbmRlY2xhcmUgbGV0IEJ5dGVBcnJheU91dHB1dFN0cmVhbTogYW55O1xuXG5leHBvcnQgZnVuY3Rpb24gbmF2aWdhdGluZ1RvKGFyZ3M6IEV2ZW50RGF0YSkge1xuICAgIGxldCBwYWdlID0gPFBhZ2U+YXJncy5vYmplY3Q7XG4gICAgcGFnZS5iaW5kaW5nQ29udGV4dCA9IG5ldyBIZWxsb1dvcmxkTW9kZWwoKTtcblxuICAgIHJlcXVlc3RQZXJtaXNzaW9ucygpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gdGFrZVBob3RvKCkge1xuICAgIHRha2VQaWN0dXJlKHtcbiAgICAgICAgd2lkdGg6IDEyODAsIGhlaWdodDogNzIwLCBrZWVwQXNwZWN0UmF0aW86IGZhbHNlLCBzYXZlVG9HYWxsZXJ5OiBmYWxzZVxuICAgIH0pLnRoZW4oKGltYWdlQXNzZXQpID0+IHtcbiAgICAgICAgaW1hZ2VBc3NldC5nZXRJbWFnZUFzeW5jKChyZXMpID0+IHtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKHJlcyk7XG5cbiAgICAgICAgICAgIHZhciBpbWFnZSA9IGZyb21OYXRpdmVTb3VyY2UocmVzKTtcbiAgICAgICAgICAgIGlmIChpc0lPUykge1xuICAgICAgICAgICAgICAgIGxldCBpbWFnZURhdGEgPSBVSUltYWdlSlBFR1JlcHJlc2VudGF0aW9uKGltYWdlLmlvcywgMS4wKTtcbiAgICAgICAgICAgICAgICBsZXQgYmFzZTY0SW1nID0gaW1hZ2VEYXRhLmJhc2U2NEVuY29kZWRTdHJpbmdXaXRoT3B0aW9ucyhOU0RhdGFCYXNlNjRFbmNvZGluZ09wdGlvbnMuTlNEYXRhQmFzZTY0RW5jb2RpbmdFbmRMaW5lV2l0aExpbmVGZWVkKTtcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhiYXNlNjRJbWcpOyAvLyBvdXIgaW1hZ2UgcmVwZXNlbnRlZCBpbiAgYmFzZTY0IHN0cmluZyByZXN1bHRcbiAgICAgICAgICAgIH0gZWxzZSBpZiAoaXNBbmRyb2lkKSB7XG4gICAgICAgICAgICAgICAgbGV0IGJpdG1hcCA9IHJlcztcbiAgICAgICAgICAgICAgICBsZXQgYnl0ZUFycmF5T3V0cHV0U3RyZWFtID0gbmV3IGphdmEuaW8uQnl0ZUFycmF5T3V0cHV0U3RyZWFtKCk7ICBcbiAgICAgICAgICAgICAgICBiaXRtYXAuY29tcHJlc3MoYW5kcm9pZC5ncmFwaGljcy5CaXRtYXAuQ29tcHJlc3NGb3JtYXQuUE5HLCAxMDAsIGJ5dGVBcnJheU91dHB1dFN0cmVhbSk7XG4gICAgICAgICAgICAgICAgbGV0IGJ5dGVBcnJheSA9IGJ5dGVBcnJheU91dHB1dFN0cmVhbS50b0J5dGVBcnJheSgpO1xuICAgICAgICAgICAgICAgIGxldCBiYXNlNjRTdHJpbmcgPSBhbmRyb2lkLnV0aWwuQmFzZTY0LmVuY29kZVRvU3RyaW5nKGJ5dGVBcnJheSwgYW5kcm9pZC51dGlsLkJhc2U2NC5ERUZBVUxUKTtcblxuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKGJhc2U2NFN0cmluZyk7IC8vIG91ciBpbWFnZSByZXBlc2VudGVkIGluICBiYXNlNjQgc3RyaW5nIHJlc3VsdFxuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICB9KS5jYXRjaChmdW5jdGlvbiAoZXJyKSB7XG4gICAgICAgIGNvbnNvbGUubG9nKFwiRXJyb3IgLT4gXCIgKyBlcnIubWVzc2FnZSk7XG4gICAgfSk7XG59Il19