"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = require("@angular/core");
var ItemsComponent = (function () {
    function ItemsComponent() {
    }
    ItemsComponent.prototype.ngOnInit = function () { };
    ItemsComponent.prototype.onWebViewLoaded = function (args) {
        var webView = args.object;
        console.log("webView: " + webView);
        webView.android.getSettings().setUseWideViewPort(true);
        webView.android.getSettings().setLoadWithOverviewMode(true);
        webView.android.getSettings().setJavaScriptEnabled(true);
        webView.android.getSettings().setCacheMode(android.webkit.WebSettings.LOAD_NO_CACHE);
        webView.android.getSettings().setRenderPriority(android.webkit.WebSettings.RenderPriority.HIGH);
        webView.android.getSettings().setLayoutAlgorithm(android.webkit.WebSettings.LayoutAlgorithm.SINGLE_COLUMN); // notice this parameter is coming from the android API
        var arr = ["ticket=1234567", "BASE64"];
        webView.android.postUrl("http://posttestserver.com/post.php", arr);
    };
    return ItemsComponent;
}());
ItemsComponent = __decorate([
    core_1.Component({
        selector: "ns-items",
        moduleId: module.id,
        templateUrl: "./items.component.html",
    }),
    __metadata("design:paramtypes", [])
], ItemsComponent);
exports.ItemsComponent = ItemsComponent;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaXRlbXMuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiaXRlbXMuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsc0NBQWtEO0FBV2xELElBQWEsY0FBYztJQUV2QjtJQUFnQixDQUFDO0lBRWpCLGlDQUFRLEdBQVIsY0FBbUIsQ0FBQztJQUVwQix3Q0FBZSxHQUFmLFVBQWdCLElBQW1CO1FBQy9CLElBQUksT0FBTyxHQUFZLElBQUksQ0FBQyxNQUFNLENBQUM7UUFFbkMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxXQUFXLEdBQUcsT0FBTyxDQUFDLENBQUM7UUFFbkMsT0FBTyxDQUFDLE9BQU8sQ0FBQyxXQUFXLEVBQUUsQ0FBQyxrQkFBa0IsQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUN2RCxPQUFPLENBQUMsT0FBTyxDQUFDLFdBQVcsRUFBRSxDQUFDLHVCQUF1QixDQUFDLElBQUksQ0FBQyxDQUFDO1FBQzVELE9BQU8sQ0FBQyxPQUFPLENBQUMsV0FBVyxFQUFFLENBQUMsb0JBQW9CLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDekQsT0FBTyxDQUFDLE9BQU8sQ0FBQyxXQUFXLEVBQUUsQ0FBQyxZQUFZLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQyxXQUFXLENBQUMsYUFBYSxDQUFDLENBQUM7UUFDckYsT0FBTyxDQUFDLE9BQU8sQ0FBQyxXQUFXLEVBQUUsQ0FBQyxpQkFBaUIsQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFDLFdBQVcsQ0FBQyxjQUFjLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDaEcsT0FBTyxDQUFDLE9BQU8sQ0FBQyxXQUFXLEVBQUUsQ0FBQyxrQkFBa0IsQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFDLFdBQVcsQ0FBQyxlQUFlLENBQUMsYUFBYSxDQUFDLENBQUMsQ0FBQyx1REFBdUQ7UUFFbkssSUFBSSxHQUFHLEdBQUcsQ0FBQyxnQkFBZ0IsRUFBQyxRQUFRLENBQUMsQ0FBQztRQUV0QyxPQUFPLENBQUMsT0FBTyxDQUFDLE9BQU8sQ0FBQyxvQ0FBb0MsRUFBRSxHQUFHLENBQUMsQ0FBQztJQUN2RSxDQUFDO0lBQ0wscUJBQUM7QUFBRCxDQUFDLEFBdEJELElBc0JDO0FBdEJZLGNBQWM7SUFMMUIsZ0JBQVMsQ0FBQztRQUNQLFFBQVEsRUFBRSxVQUFVO1FBQ3BCLFFBQVEsRUFBRSxNQUFNLENBQUMsRUFBRTtRQUNuQixXQUFXLEVBQUUsd0JBQXdCO0tBQ3hDLENBQUM7O0dBQ1csY0FBYyxDQXNCMUI7QUF0Qlksd0NBQWMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIE9uSW5pdCB9IGZyb20gXCJAYW5ndWxhci9jb3JlXCI7XG5pbXBvcnQgeyBXZWJWaWV3LCBMb2FkRXZlbnREYXRhIH0gZnJvbSBcInVpL3dlYi12aWV3XCI7XG5cbmRlY2xhcmUgdmFyIGFuZHJvaWQ6IGFueTtcbmRlY2xhcmUgdmFyIG9yZzogYW55O1xuXG5AQ29tcG9uZW50KHtcbiAgICBzZWxlY3RvcjogXCJucy1pdGVtc1wiLFxuICAgIG1vZHVsZUlkOiBtb2R1bGUuaWQsXG4gICAgdGVtcGxhdGVVcmw6IFwiLi9pdGVtcy5jb21wb25lbnQuaHRtbFwiLFxufSlcbmV4cG9ydCBjbGFzcyBJdGVtc0NvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCB7XG5cbiAgICBjb25zdHJ1Y3RvcigpIHsgfVxuXG4gICAgbmdPbkluaXQoKTogdm9pZCB7IH1cblxuICAgIG9uV2ViVmlld0xvYWRlZChhcmdzOiBMb2FkRXZlbnREYXRhKSB7XG4gICAgICAgIHZhciB3ZWJWaWV3ID0gPFdlYlZpZXc+YXJncy5vYmplY3Q7XG5cbiAgICAgICAgY29uc29sZS5sb2coXCJ3ZWJWaWV3OiBcIiArIHdlYlZpZXcpO1xuXG4gICAgICAgIHdlYlZpZXcuYW5kcm9pZC5nZXRTZXR0aW5ncygpLnNldFVzZVdpZGVWaWV3UG9ydCh0cnVlKTtcbiAgICAgICAgd2ViVmlldy5hbmRyb2lkLmdldFNldHRpbmdzKCkuc2V0TG9hZFdpdGhPdmVydmlld01vZGUodHJ1ZSk7XG4gICAgICAgIHdlYlZpZXcuYW5kcm9pZC5nZXRTZXR0aW5ncygpLnNldEphdmFTY3JpcHRFbmFibGVkKHRydWUpO1xuICAgICAgICB3ZWJWaWV3LmFuZHJvaWQuZ2V0U2V0dGluZ3MoKS5zZXRDYWNoZU1vZGUoYW5kcm9pZC53ZWJraXQuV2ViU2V0dGluZ3MuTE9BRF9OT19DQUNIRSk7XG4gICAgICAgIHdlYlZpZXcuYW5kcm9pZC5nZXRTZXR0aW5ncygpLnNldFJlbmRlclByaW9yaXR5KGFuZHJvaWQud2Via2l0LldlYlNldHRpbmdzLlJlbmRlclByaW9yaXR5LkhJR0gpO1xuICAgICAgICB3ZWJWaWV3LmFuZHJvaWQuZ2V0U2V0dGluZ3MoKS5zZXRMYXlvdXRBbGdvcml0aG0oYW5kcm9pZC53ZWJraXQuV2ViU2V0dGluZ3MuTGF5b3V0QWxnb3JpdGhtLlNJTkdMRV9DT0xVTU4pOyAvLyBub3RpY2UgdGhpcyBwYXJhbWV0ZXIgaXMgY29taW5nIGZyb20gdGhlIGFuZHJvaWQgQVBJXG5cbiAgICAgICAgdmFyIGFyciA9IFtcInRpY2tldD0xMjM0NTY3XCIsXCJCQVNFNjRcIl07XG5cbiAgICAgICAgd2ViVmlldy5hbmRyb2lkLnBvc3RVcmwoXCJodHRwOi8vcG9zdHRlc3RzZXJ2ZXIuY29tL3Bvc3QucGhwXCIsIGFycik7XG4gICAgfVxufVxuIl19