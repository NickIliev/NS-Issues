"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = require("@angular/core");
var namesAndEmails = require("./names.json");
var posts = require("./posts.json");
var listItems = require("./listItems.json");
var DataItemService = (function () {
    function DataItemService() {
        this._words = ["One", "Two", "Three", "Four", "Five", "Six", "Seven", "Eight", "Nine", "Ten"];
    }
    DataItemService.prototype.getDataItems = function () {
        return exports.DATAITEMS;
    };
    DataItemService.prototype.getIdenticalDataItems = function (size) {
        var result = new Array();
        for (var i = 0; i < size; i++) {
            result.push(new DataItem(i, "Item " + i, "This is item description."));
        }
        return result;
    };
    DataItemService.prototype.getPersonDataItems = function () {
        var result = new Array();
        for (var i = 0; i < namesAndEmails.names.length; i++) {
            result.push(new DataItem(i, namesAndEmails.names[i], "This is item description"));
        }
        return result;
    };
    DataItemService.prototype.getNameEmailDataItems = function () {
        var result = new Array();
        for (var i = 0; i < namesAndEmails.names.length; i++) {
            result.push(new DataItem(i, namesAndEmails.names[i], namesAndEmails.emails[i]));
        }
        return result;
    };
    DataItemService.prototype.getPostDataItems = function () {
        var result = new Array();
        for (var i = 0; i < posts.names.length; i++) {
            result.push(new DataItem(i, posts.names[i], "This is item description", posts.titles[i], posts.text[i]));
        }
        return result;
    };
    DataItemService.prototype.getListItemsFromJson = function () {
        var result = new Array();
        for (var i = 0; i < listItems.items.length; i++) {
            result.push(new DataItem(i, listItems.items[i].author, "This is item description", listItems.items[i].title, listItems.items[i].category, listItems.items[i].photo));
        }
        return result;
    };
    DataItemService.prototype.getStaggeredItems = function () {
        var result = new Array();
        for (var i = 0; i < 50; i++) {
            result.push(new DataItem(i, "Item " + i, this.getRandomLengthString()));
        }
        return result;
    };
    DataItemService.prototype.getRandomLengthString = function () {
        var sentenceLength = Math.round((Math.random() * 15));
        var result = this._words[0];
        for (var i = 0; i < sentenceLength; i++) {
            result += (this._words[i % this._words.length] + " ");
        }
        return result;
    };
    DataItemService = __decorate([
        core_1.Injectable()
    ], DataItemService);
    return DataItemService;
}());
exports.DataItemService = DataItemService;
var DataItem = (function () {
    function DataItem(id, name, description, title, text, image, selected, type) {
        this.id = id;
        this.name = name;
        this.description = description;
        this.title = title;
        this.text = text;
        this.image = image;
        this.selected = selected;
        this.type = type;
    }
    return DataItem;
}());
exports.DataItem = DataItem;
exports.DATAITEMS = [
    { "id": 1, "name": "Item 1", "description": "This is item description.", "title": "This is item Title", "text": "This is item Text", "image": "This is item Image", "selected": false },
    { "id": 2, "name": "Item 2", "description": "This is item description.", "title": "This is item Title", "text": "This is item Text", "image": "This is item Image", "selected": false },
    { "id": 3, "name": "Item 3", "description": "This is item description.", "title": "This is item Title", "text": "This is item Text", "image": "This is item Image", "selected": false },
    { "id": 4, "name": "Item 4", "description": "This is item description.", "title": "This is item Title", "text": "This is item Text", "image": "This is item Image", "selected": false },
    { "id": 5, "name": "Item 5", "description": "This is item description.", "title": "This is item Title", "text": "This is item Text", "image": "This is item Image", "selected": false },
    { "id": 6, "name": "Item 6", "description": "This is item description.", "title": "This is item Title", "text": "This is item Text", "image": "This is item Image", "selected": false },
    { "id": 7, "name": "Item 7", "description": "This is item description.", "title": "This is item Title", "text": "This is item Text", "image": "This is item Image", "selected": false },
    { "id": 8, "name": "Item 8", "description": "This is item description.", "title": "This is item Title", "text": "This is item Text", "image": "This is item Image", "selected": false },
    { "id": 9, "name": "Item 9", "description": "This is item description.", "title": "This is item Title", "text": "This is item Text", "image": "This is item Image", "selected": false },
    { "id": 10, "name": "Item 10", "description": "This is item description.", "title": "This is item Title", "text": "This is item Text", "image": "This is item Image", "selected": false },
];
//# sourceMappingURL=data:application/json;base64,