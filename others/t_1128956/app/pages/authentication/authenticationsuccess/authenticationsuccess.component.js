"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = require("@angular/core");
var router_1 = require("@angular/router");
var router_2 = require("nativescript-angular/router");
var formValidation_service_1 = require("../../../shared/services/formValidation.service");
var authentication_service_1 = require("../authentication.service");
var global_1 = require("../../../shared/global");
var appSettingsModule = require("application-settings");
var appSettings = require("application-settings");
var app = require("tns-core-modules/application");
var page_1 = require("ui/page");
var nativescript_loading_indicator_1 = require("nativescript-loading-indicator");
var loader = new nativescript_loading_indicator_1.LoadingIndicator();
var AuthenticationSuccessComponent = (function () {
    function AuthenticationSuccessComponent(formValidationService, page, _routerExtensions, authService, _globals, _router) {
        this.formValidationService = formValidationService;
        this.page = page;
        this._routerExtensions = _routerExtensions;
        this.authService = authService;
        this._globals = _globals;
        this._router = _router;
        this.title = "Authentication";
        this.isUserNameEmpty = false;
        this.isUserNameInvalid = false;
        this.isPasswordEmpty = false;
        this.isPasswordInvalid = false;
    }
    AuthenticationSuccessComponent.prototype.ngOnInit = function () {
        if (app.ios) {
            this.page.css = "Page {background-image : none; margin-top: 0} ";
        }
        this.signInType = this.transform(this.authService.user_registration_type);
        this.signInTypeValue = this.transform(this.authService.user_name);
    };
    // Capitalize the first letter of the string
    AuthenticationSuccessComponent.prototype.transform = function (value) {
        if (value) {
            return value.charAt(0).toUpperCase() + value.slice(1);
        }
        return value;
    };
    // Validating all fields
    AuthenticationSuccessComponent.prototype.validateUserInfo = function () {
        var isError = false;
        this.isUserNameEmpty = !this.formValidationService.fieldFilledValidator(this.username);
        this.isUserNameInvalid = !this.formValidationService.usernameValidator(this.username);
        this.isPasswordEmpty = !this.formValidationService.fieldFilledValidator(this.password);
        this.isPasswordInvalid = !this.formValidationService.passwordPatternValidator(this.password);
        if (this.isUserNameEmpty || this.isUserNameInvalid || this.isPasswordEmpty || this.isPasswordInvalid) {
            isError = true;
        }
        return isError;
    };
    AuthenticationSuccessComponent.prototype.continueMyBlue = function () {
        loader.show();
        this._routerExtensions.navigate(["/login"], {
            animated: false
        });
        loader.hide();
    };
    AuthenticationSuccessComponent.prototype.continueToMyBluePage = function () {
        loader.show();
        appSettingsModule.setString("firstName", "");
        appSettingsModule.setString("lastName", "");
        appSettingsModule.setString("dob", "");
        appSettingsModule.setString("emailAddress", "");
        appSettingsModule.setString("mobileNum", "");
        // Forward to my blue main page
        this._globals.isLoggedIn = true;
        this._globals.isUnauthenticated = false;
        this._globals.isanonymous = false;
        this._globals.isAuthenticationSuccess = true;
        this._globals.changeLogin();
        appSettings.setBoolean("isAuthenticated", true);
        appSettings.setNumber("isFirstTimeOpened", 1);
        this._globals.user_updatedusername = "";
        this._globals.user_updatedpassword = "";
        appSettingsModule.setString("verify-unauthenticate", "fully-authenticated");
        this._globals.user_state = "ANV";
        this._routerExtensions.navigate(["/login"], {
            animated: false
        });
        loader.hide();
        // this._routerExtensions.navigate(["/home/signedHome"], {
        //     animated: false
        //   });
    };
    AuthenticationSuccessComponent.prototype.updateUserInformation = function () {
        if (!this.validateUserInfo()) {
            //  Call the backend API Service after the UI fields validation
            this._globals.user_updatedusername = this.username;
            this._globals.user_updatedpassword = this.password;
            this.close();
        }
    };
    // To close the modal-window
    AuthenticationSuccessComponent.prototype.close = function () {
        this.continueToMyBluePage();
    };
    return AuthenticationSuccessComponent;
}());
AuthenticationSuccessComponent = __decorate([
    core_1.Component({
        moduleId: module.id,
        templateUrl: "./authenticationsuccess.component.html",
        styleUrls: ["../authentication.css"],
    }),
    __metadata("design:paramtypes", [formValidation_service_1.FormValidationService, page_1.Page, router_2.RouterExtensions, authentication_service_1.AuthenticationService, global_1.Globals, router_1.Router])
], AuthenticationSuccessComponent);
exports.AuthenticationSuccessComponent = AuthenticationSuccessComponent;
//# sourceMappingURL=data:application/json;base64,