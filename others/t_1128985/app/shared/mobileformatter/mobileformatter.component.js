"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = require("@angular/core");
var page_1 = require("ui/page");
// import { TextField } from "ui/text-view";
var MobileFormatterComponent = (function () {
    function MobileFormatterComponent(_page) {
        this._page = _page;
        this.numberChange = new core_1.EventEmitter();
    }
    MobileFormatterComponent.prototype.ngOnInit = function () {
        if (this.numbervalue != "") {
            this.p1 = this.numbervalue.charAt(1);
            this.p2 = this.numbervalue.charAt(2);
            this.p3 = this.numbervalue.charAt(3);
            this.p4 = this.numbervalue.charAt(5);
            this.p5 = this.numbervalue.charAt(6);
            this.p6 = this.numbervalue.charAt(7);
            this.p7 = this.numbervalue.charAt(9);
            this.p8 = this.numbervalue.charAt(10);
            this.p9 = this.numbervalue.charAt(11);
            this.p10 = this.numbervalue.charAt(12);
            this.updatedNumber = '(' + this.p1 + this.p2 + this.p3 + ')' + this.p4 + this.p5 + this.p6 + '-' + this.p7 + this.p8 + this.p9 + this.p10;
        }
    };
    MobileFormatterComponent.prototype.onMobileNoValueChange = function (newValue, oldValue, currentField, nextField, bindingVar, domId) {
        var tfield = this._page.getViewById(domId);
        if (newValue.toString().length > 1) {
            var targetValue = newValue.replace(oldValue, "");
            this[bindingVar] = targetValue;
            tfield.text = targetValue;
        }
        if (nextField && newValue) {
            nextField.focus();
        }
        this.updatedNumber = '(' + this.p1 + this.p2 + this.p3 + ')' + this.p4 + this.p5 + this.p6 + '-' + this.p7 + this.p8 + this.p9 + this.p10;
        this.numberChange.emit(this.updatedNumber);
    };
    MobileFormatterComponent.prototype.clearDate = function () {
        var _this = this;
        this.p1 = "";
        this.p2 = "";
        this.p3 = "";
        this.p4 = "";
        this.p5 = "";
        this.p6 = "";
        this.p7 = "";
        this.p8 = "";
        this.p9 = "";
        this.p10 = "";
        setTimeout(function () {
            var txtfld1 = _this.p1Field.nativeElement;
            txtfld1.focus();
        }, 1000);
    };
    return MobileFormatterComponent;
}());
__decorate([
    core_1.Input(),
    __metadata("design:type", String)
], MobileFormatterComponent.prototype, "numbervalue", void 0);
__decorate([
    core_1.ViewChild("p1Field"),
    __metadata("design:type", core_1.ElementRef)
], MobileFormatterComponent.prototype, "p1Field", void 0);
__decorate([
    core_1.Output(),
    __metadata("design:type", Object)
], MobileFormatterComponent.prototype, "numberChange", void 0);
MobileFormatterComponent = __decorate([
    core_1.Component({
        selector: "mobile-formmater-control",
        moduleId: module.id,
        templateUrl: 'mobileformatter.component.html',
        styleUrls: ["mobileformatter.css"]
    }),
    __metadata("design:paramtypes", [page_1.Page])
], MobileFormatterComponent);
exports.MobileFormatterComponent = MobileFormatterComponent;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9iaWxlZm9ybWF0dGVyLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIm1vYmlsZWZvcm1hdHRlci5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxzQ0FBc0c7QUFDdEcsZ0NBQStCO0FBRS9CLDRDQUE0QztBQVM1QyxJQUFhLHdCQUF3QjtJQW9CbkMsa0NBQW9CLEtBQVc7UUFBWCxVQUFLLEdBQUwsS0FBSyxDQUFNO1FBRnJCLGlCQUFZLEdBQUcsSUFBSSxtQkFBWSxFQUFFLENBQUM7SUFHNUMsQ0FBQztJQUVELDJDQUFRLEdBQVI7UUFDRSxFQUFFLENBQUEsQ0FBQyxJQUFJLENBQUMsV0FBVyxJQUFFLEVBQUUsQ0FBQyxDQUFBLENBQUM7WUFDekIsSUFBSSxDQUFDLEVBQUUsR0FBRyxJQUFJLENBQUMsV0FBVyxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsQ0FBQztZQUNyQyxJQUFJLENBQUMsRUFBRSxHQUFHLElBQUksQ0FBQyxXQUFXLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFDO1lBQ3JDLElBQUksQ0FBQyxFQUFFLEdBQUcsSUFBSSxDQUFDLFdBQVcsQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUM7WUFDckMsSUFBSSxDQUFDLEVBQUUsR0FBRyxJQUFJLENBQUMsV0FBVyxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsQ0FBQztZQUNyQyxJQUFJLENBQUMsRUFBRSxHQUFHLElBQUksQ0FBQyxXQUFXLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFDO1lBQ3JDLElBQUksQ0FBQyxFQUFFLEdBQUcsSUFBSSxDQUFDLFdBQVcsQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUM7WUFDckMsSUFBSSxDQUFDLEVBQUUsR0FBRyxJQUFJLENBQUMsV0FBVyxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsQ0FBQztZQUNyQyxJQUFJLENBQUMsRUFBRSxHQUFHLElBQUksQ0FBQyxXQUFXLENB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LFlBQUssRUFBRTs7NkRBQXFCO0FBY047SUFBckIsZ0JBQVMsQ0FBQyxTQUFTLENBQUM7OEJBQVUsaUJBQVU7eURBQUM7QUFFakM7SUFBVCxhQUFNLEVBQUU7OzhEQUFtQztBQWxCakMsd0JBQXdCO0lBUHBDLGdCQUFTLENBQUM7UUFFVCxRQUFRLEVBQUUsMEJBQTBCO1FBQ25DLFFBQVEsRUFBRSxNQUFNLENBQUMsRUFBRTtRQUNwQixXQUFXLEVBQUUsZ0NBQWdDO1FBQzdDLFNBQVMsRUFBRSxDQUFDLHFCQUFxQixDQUFDO0tBQ25DLENBQUM7cUNBcUIyQixXQUFJO0dBcEJwQix3QkFBd0IsQ0F3RWxDO0FBeEVVLDREQUF3QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgT25Jbml0LCBWaWV3Q2hpbGQsIEVsZW1lbnRSZWYsIElucHV0LCBPdXRwdXQsIEV2ZW50RW1pdHRlciB9IGZyb20gXCJAYW5ndWxhci9jb3JlXCI7XG5pbXBvcnQgeyBQYWdlIH0gZnJvbSBcInVpL3BhZ2VcIjtcbmltcG9ydCB7IFRleHRGaWVsZCB9IGZyb20gXCJ1aS90ZXh0LWZpZWxkXCI7XG4vLyBpbXBvcnQgeyBUZXh0RmllbGQgfSBmcm9tIFwidWkvdGV4dC12aWV3XCI7XG5cbkBDb21wb25lbnQoe1xuXG4gIHNlbGVjdG9yOiBcIm1vYmlsZS1mb3JtbWF0ZXItY29udHJvbFwiLFxuICAgbW9kdWxlSWQ6IG1vZHVsZS5pZCxcbiAgdGVtcGxhdGVVcmw6ICdtb2JpbGVmb3JtYXR0ZXIuY29tcG9uZW50Lmh0bWwnLFxuICBzdHlsZVVybHM6IFtcIm1vYmlsZWZvcm1hdHRlci5jc3NcIl1cbn0pXG5leHBvcnQgY2xhc3MgTW9iaWxlRm9ybWF0dGVyQ29tcG9uZW50IHtcblxuICBASW5wdXQoKSBudW1iZXJ2YWx1ZTogc3RyaW5nO1xuXG4gIHB1YmxpYyBwMTtcbiAgcHVibGljIHAyO1xuICBwdWJsaWMgcDM7XG4gIHB1YmxpYyBwNDtcbiAgcHVibGljIHA1O1xuICBwdWJsaWMgcDY7XG4gIHB1YmxpYyBwNztcbiAgcHVibGljIHA4O1xuICBwdWJsaWMgcDk7XG4gIHB1YmxpYyBwMTA7XG5cbiAgcHVibGljIHVwZGF0ZWROdW1iZXI7XG4gICBAVmlld0NoaWxkKFwicDFGaWVsZFwiKSBwMUZpZWxkOiBFbGVtZW50UmVmO1xuXG4gIEBPdXRwdXQoKSBudW1iZXJDaGFuZ2UgPSBuZXcgRXZlbnRFbWl0dGVyKCk7XG5cbiAgY29uc3RydWN0b3IocHJpdmF0ZSBfcGFnZTogUGFnZSkge1xuICB9XG5cbiAgbmdPbkluaXQoKSB7XG4gICAgaWYodGhpcy5udW1iZXJ2YWx1ZSE9XCJcIil7XG4gICAgdGhpcy5wMSA9IHRoaXMubnVtYmVydmFsdWUuY2hhckF0KDEpO1xuICAgIHRoaXMucDIgPSB0aGlzLm51bWJlcnZhbHVlLmNoYXJBdCgyKTtcbiAgICB0aGlzLnAzID0gdGhpcy5udW1iZXJ2YWx1ZS5jaGFyQXQoMyk7XG4gICAgdGhpcy5wNCA9IHRoaXMubnVtYmVydmFsdWUuY2hhckF0KDUpO1xuICAgIHRoaXMucDUgPSB0aGlzLm51bWJlcnZhbHVlLmNoYXJBdCg2KTtcbiAgICB0aGlzLnA2ID0gdGhpcy5udW1iZXJ2YWx1ZS5jaGFyQXQoNyk7XG4gICAgdGhpcy5wNyA9IHRoaXMubnVtYmVydmFsdWUuY2hhckF0KDkpO1xuICAgIHRoaXMucDggPSB0aGlzLm51bWJlcnZhbHVlLmNoYXJBdCgxMCk7XG4gICAgdGhpcy5wOSA9IHRoaXMubnVtYmVydmFsdWUuY2hhckF0KDExKTtcbiAgICB0aGlzLnAxMCA9IHRoaXMubnVtYmVydmFsdWUuY2hhckF0KDEyKTtcblxuICAgIHRoaXMudXBkYXRlZE51bWJlciA9ICcoJyt0aGlzLnAxICsgdGhpcy5wMiArICB0aGlzLnAzICsnKScrIHRoaXMucDQrIHRoaXMucDUgKyB0aGlzLnA2ICsnLScrIHRoaXMucDcgKyB0aGlzLnA4K3RoaXMucDkrdGhpcy5wMTA7XG4gICAgfVxuICAgIFxuICB9XG5cbiAgcHVibGljIG9uTW9iaWxlTm9WYWx1ZUNoYW5nZShuZXdWYWx1ZSwgb2xkVmFsdWUsIGN1cnJlbnRGaWVsZCwgbmV4dEZpZWxkLCBiaW5kaW5nVmFyLCBkb21JZCkge1xuICAgIHZhciB0ZmllbGQ6IFRleHRGaWVsZCA9IDxUZXh0RmllbGQ+dGhpcy5fcGFnZS5nZXRWaWV3QnlJZChkb21JZCk7XG4gICAgaWYgKG5ld1ZhbHVlLnRvU3RyaW5nKCkubGVuZ3RoID4gMSkge1xuXHRcbiAgICAgIGxldCB0YXJnZXRWYWx1ZSA9IG5ld1ZhbHVlLnJlcGxhY2Uob2xkVmFsdWUsIFwiXCIpO1xuXHRcbiAgICAgIHRoaXNbYmluZGluZ1Zhcl0gPSB0YXJnZXRWYWx1ZTtcbiAgICAgIHRmaWVsZC50ZXh0ID0gdGFyZ2V0VmFsdWU7XG4gICAgfVxuICAgIGlmIChuZXh0RmllbGQgJiYgbmV3VmFsdWUpIHtcbiAgICAgIG5leHRGaWVsZC5mb2N1cygpO1xuICAgIH1cbiAgICAgdGhpcy51cGRhdGVkTnVtYmVyID0gJygnK3RoaXMucDEgKyB0aGlzLnAyICsgIHRoaXMucDMgKycpJysgdGhpcy5wNCsgdGhpcy5wNSArIHRoaXMucDYgKyctJysgdGhpcy5wNyArIHRoaXMucDgrdGhpcy5wOSt0aGlzLnAxMDtcbiAgICB0aGlzLm51bWJlckNoYW5nZS5lbWl0KHRoaXMudXBkYXRlZE51bWJlcik7XG4gIH1cbiAgcHVibGljIGNsZWFyRGF0ZSgpe1xuICAgIHRoaXMucDEgPSBcIlwiO1xuICAgIHRoaXMucDIgPSBcIlwiO1xuICAgIHRoaXMucDMgPSBcIlwiO1xuICAgIHRoaXMucDQgPSBcIlwiO1xuICAgIHRoaXMucDUgPSBcIlwiO1xuICAgIHRoaXMucDYgPSBcIlwiO1xuICAgIHRoaXMucDcgPSBcIlwiO1xuICAgIHRoaXMucDggPSBcIlwiO1xuICAgIHRoaXMucDkgPSBcIlwiO1xuICAgIHRoaXMucDEwID0gXCJcIjtcbiAgICBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgICAgbGV0IHR4dGZsZDEgPSA8VGV4dEZpZWxkPnRoaXMucDFGaWVsZC5uYXRpdmVFbGVtZW50O1xuICAgICAgICB0eHRmbGQxLmZvY3VzKCk7IFxuICAgICAgICB9LCAxMDAwKTtcbiAgfVxuICB9XG4iXX0=